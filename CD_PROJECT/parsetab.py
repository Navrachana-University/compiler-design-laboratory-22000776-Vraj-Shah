
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BOOL COLON DIV ELSE EQ FALSE FOR GE GT IDENTIFIER IF IN INT LBRACE LE LET LPAREN LT MINUS MOD MUL NEQ NUMBER PLUS PRINT RBRACE RPAREN SEMICOLON TRUE WHILEprogram : statement_liststatement_list : statement_list statement\n| statementstatement : declaration SEMICOLON\n| assignment SEMICOLON\n| print_stmt SEMICOLON\n| if_stmt\n| while_stmt\n| for_stmtdeclaration : LET IDENTIFIER COLON type ASSIGN expressiontype : INT\n| BOOLassignment : IDENTIFIER ASSIGN expressionprint_stmt : PRINT LPAREN expression RPARENif_stmt : IF LPAREN expression RPAREN block\n| IF LPAREN expression RPAREN block ELSE blockwhile_stmt : WHILE LPAREN expression RPAREN blockfor_stmt : FOR IDENTIFIER IN expression blockblock : LBRACE statement_list RBRACEexpression : expression PLUS expression\n| expression MINUS expression\n| expression MUL expression\n| expression DIV expression\n| expression MOD expression\n| expression EQ expression\n| expression NEQ expression\n| expression LT expression\n| expression LE expression\n| expression GT expression\n| expression GE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : TRUEexpression : FALSEexpression : IDENTIFIER'
    
_lr_action_items = {'LET':([0,2,3,7,8,9,16,17,18,19,69,70,71,72,75,76,77,],[10,10,-3,-7,-8,-9,-2,-4,-5,-6,-15,10,-17,-18,10,-16,-19,]),'IDENTIFIER':([0,2,3,7,8,9,10,15,16,17,18,19,21,22,23,24,29,36,40,41,42,43,44,45,46,47,48,49,50,56,69,70,71,72,75,76,77,],[11,11,-3,-7,-8,-9,20,25,-2,-4,-5,-6,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-15,11,-17,-18,11,-16,-19,]),'PRINT':([0,2,3,7,8,9,16,17,18,19,69,70,71,72,75,76,77,],[12,12,-3,-7,-8,-9,-2,-4,-5,-6,-15,12,-17,-18,12,-16,-19,]),'IF':([0,2,3,7,8,9,16,17,18,19,69,70,71,72,75,76,77,],[13,13,-3,-7,-8,-9,-2,-4,-5,-6,-15,13,-17,-18,13,-16,-19,]),'WHILE':([0,2,3,7,8,9,16,17,18,19,69,70,71,72,75,76,77,],[14,14,-3,-7,-8,-9,-2,-4,-5,-6,-15,14,-17,-18,14,-16,-19,]),'FOR':([0,2,3,7,8,9,16,17,18,19,69,70,71,72,75,76,77,],[15,15,-3,-7,-8,-9,-2,-4,-5,-6,-15,15,-17,-18,15,-16,-19,]),'$end':([1,2,3,7,8,9,16,17,18,19,69,71,72,76,77,],[0,-1,-3,-7,-8,-9,-2,-4,-5,-6,-15,-17,-18,-16,-19,]),'RBRACE':([3,7,8,9,16,17,18,19,69,71,72,75,76,77,],[-3,-7,-8,-9,-2,-4,-5,-6,-15,-17,-18,77,-16,-19,]),'SEMICOLON':([4,5,6,27,28,30,31,32,52,57,58,59,60,61,62,63,64,65,66,67,68,73,],[17,18,19,-35,-13,-32,-33,-34,-14,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-10,]),'ASSIGN':([11,37,38,39,],[21,56,-11,-12,]),'LPAREN':([12,13,14,21,22,23,24,29,36,40,41,42,43,44,45,46,47,48,49,50,56,],[22,23,24,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'COLON':([20,],[26,]),'NUMBER':([21,22,23,24,29,36,40,41,42,43,44,45,46,47,48,49,50,56,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TRUE':([21,22,23,24,29,36,40,41,42,43,44,45,46,47,48,49,50,56,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'FALSE':([21,22,23,24,29,36,40,41,42,43,44,45,46,47,48,49,50,56,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'IN':([25,],[36,]),'INT':([26,],[38,]),'BOOL':([26,],[39,]),'PLUS':([27,28,30,31,32,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-35,40,-32,-33,-34,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-31,40,]),'MINUS':([27,28,30,31,32,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-35,41,-32,-33,-34,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-31,41,]),'MUL':([27,28,30,31,32,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-35,42,-32,-33,-34,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-31,42,]),'DIV':([27,28,30,31,32,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-35,43,-32,-33,-34,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-31,43,]),'MOD':([27,28,30,31,32,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-35,44,-32,-33,-34,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-31,44,]),'EQ':([27,28,30,31,32,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-35,45,-32,-33,-34,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-31,45,]),'NEQ':([27,28,30,31,32,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-35,46,-32,-33,-34,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-31,46,]),'LT':([27,28,30,31,32,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-35,47,-32,-33,-34,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-31,47,]),'LE':([27,28,30,31,32,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-35,48,-32,-33,-34,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-31,48,]),'GT':([27,28,30,31,32,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-35,49,-32,-33,-34,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-31,49,]),'GE':([27,28,30,31,32,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,68,73,],[-35,50,-32,-33,-34,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-31,50,]),'RPAREN':([27,30,31,32,33,34,35,51,57,58,59,60,61,62,63,64,65,66,67,68,],[-35,-32,-33,-34,52,53,54,68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,]),'LBRACE':([27,30,31,32,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,74,],[-35,-32,-33,-34,70,70,70,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,70,]),'ELSE':([69,77,],[74,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,70,],[2,75,]),'statement':([0,2,70,75,],[3,16,3,16,]),'declaration':([0,2,70,75,],[4,4,4,4,]),'assignment':([0,2,70,75,],[5,5,5,5,]),'print_stmt':([0,2,70,75,],[6,6,6,6,]),'if_stmt':([0,2,70,75,],[7,7,7,7,]),'while_stmt':([0,2,70,75,],[8,8,8,8,]),'for_stmt':([0,2,70,75,],[9,9,9,9,]),'expression':([21,22,23,24,29,36,40,41,42,43,44,45,46,47,48,49,50,56,],[28,33,34,35,51,55,57,58,59,60,61,62,63,64,65,66,67,73,]),'type':([26,],[37,]),'block':([53,54,55,74,],[69,71,72,76,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','two.py',247),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','two.py',251),
  ('statement_list -> statement','statement_list',1,'p_statement_list','two.py',252),
  ('statement -> declaration SEMICOLON','statement',2,'p_statement','two.py',259),
  ('statement -> assignment SEMICOLON','statement',2,'p_statement','two.py',260),
  ('statement -> print_stmt SEMICOLON','statement',2,'p_statement','two.py',261),
  ('statement -> if_stmt','statement',1,'p_statement','two.py',262),
  ('statement -> while_stmt','statement',1,'p_statement','two.py',263),
  ('statement -> for_stmt','statement',1,'p_statement','two.py',264),
  ('declaration -> LET IDENTIFIER COLON type ASSIGN expression','declaration',6,'p_declaration','two.py',268),
  ('type -> INT','type',1,'p_type','two.py',273),
  ('type -> BOOL','type',1,'p_type','two.py',274),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','two.py',278),
  ('print_stmt -> PRINT LPAREN expression RPAREN','print_stmt',4,'p_print_stmt','two.py',284),
  ('if_stmt -> IF LPAREN expression RPAREN block','if_stmt',5,'p_if_stmt','two.py',288),
  ('if_stmt -> IF LPAREN expression RPAREN block ELSE block','if_stmt',7,'p_if_stmt','two.py',289),
  ('while_stmt -> WHILE LPAREN expression RPAREN block','while_stmt',5,'p_while_stmt','two.py',296),
  ('for_stmt -> FOR IDENTIFIER IN expression block','for_stmt',5,'p_for_stmt','two.py',300),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','two.py',304),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','two.py',308),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','two.py',309),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','two.py',310),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','two.py',311),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','two.py',312),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','two.py',313),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','two.py',314),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','two.py',315),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','two.py',316),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','two.py',317),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','two.py',318),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','two.py',322),
  ('expression -> NUMBER','expression',1,'p_expression_number','two.py',326),
  ('expression -> TRUE','expression',1,'p_expression_true','two.py',330),
  ('expression -> FALSE','expression',1,'p_expression_false','two.py',334),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','two.py',338),
]
